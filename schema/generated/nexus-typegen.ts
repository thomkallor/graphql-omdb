/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  GetByIdResult: { // root type
    Actors?: string | null; // String
    Awards?: string | null; // String
    BoxOffice?: string | null; // String
    Country?: string | null; // String
    Director?: string | null; // String
    Genre?: string | null; // String
    Language?: string | null; // String
    Metascore?: string | null; // String
    Plot?: string | null; // String
    Poster?: string | null; // String
    Production?: string | null; // String
    Rated?: string | null; // String
    Ratings?: string | null; // String
    Released?: string | null; // String
    Response?: string | null; // String
    Runtime?: string | null; // String
    Title?: string | null; // String
    Type?: string | null; // String
    Writer?: string | null; // String
    Year?: string | null; // String
    imdbID?: string | null; // ID
    imdbRating?: number | null; // Float
    imdbVotes?: string | null; // String
    totalSeasons?: string | null; // String
  }
  Query: {};
  SearchResponse: { // root type
    Response?: string | null; // String
    Search?: Array<NexusGenRootTypes['SearchResult'] | null> | null; // [SearchResult]
    totalResults?: number | null; // Int
  }
  SearchResult: { // root type
    Poster?: string | null; // String
    Title?: string | null; // String
    Type?: string | null; // String
    Year?: string | null; // String
    imdbID?: string | null; // ID
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  GetByIdResult: { // field return type
    Actors: string | null; // String
    Awards: string | null; // String
    BoxOffice: string | null; // String
    Country: string | null; // String
    Director: string | null; // String
    Genre: string | null; // String
    Language: string | null; // String
    Metascore: string | null; // String
    Plot: string | null; // String
    Poster: string | null; // String
    Production: string | null; // String
    Rated: string | null; // String
    Ratings: string | null; // String
    Released: string | null; // String
    Response: string | null; // String
    Runtime: string | null; // String
    Title: string | null; // String
    Type: string | null; // String
    Writer: string | null; // String
    Year: string | null; // String
    imdbID: string | null; // ID
    imdbRating: number | null; // Float
    imdbVotes: string | null; // String
    totalSeasons: string | null; // String
  }
  Query: { // field return type
    getById: NexusGenRootTypes['GetByIdResult'] | null; // GetByIdResult
    search: NexusGenRootTypes['SearchResponse'] | null; // SearchResponse
  }
  SearchResponse: { // field return type
    Response: string | null; // String
    Search: Array<NexusGenRootTypes['SearchResult'] | null> | null; // [SearchResult]
    totalResults: number | null; // Int
  }
  SearchResult: { // field return type
    Poster: string | null; // String
    Title: string | null; // String
    Type: string | null; // String
    Year: string | null; // String
    imdbID: string | null; // ID
  }
}

export interface NexusGenFieldTypeNames {
  GetByIdResult: { // field return type name
    Actors: 'String'
    Awards: 'String'
    BoxOffice: 'String'
    Country: 'String'
    Director: 'String'
    Genre: 'String'
    Language: 'String'
    Metascore: 'String'
    Plot: 'String'
    Poster: 'String'
    Production: 'String'
    Rated: 'String'
    Ratings: 'String'
    Released: 'String'
    Response: 'String'
    Runtime: 'String'
    Title: 'String'
    Type: 'String'
    Writer: 'String'
    Year: 'String'
    imdbID: 'ID'
    imdbRating: 'Float'
    imdbVotes: 'String'
    totalSeasons: 'String'
  }
  Query: { // field return type name
    getById: 'GetByIdResult'
    search: 'SearchResponse'
  }
  SearchResponse: { // field return type name
    Response: 'String'
    Search: 'SearchResult'
    totalResults: 'Int'
  }
  SearchResult: { // field return type name
    Poster: 'String'
    Title: 'String'
    Type: 'String'
    Year: 'String'
    imdbID: 'ID'
  }
}

export interface NexusGenArgTypes {
  Query: {
    getById: { // args
      imdbID?: string | null; // String
    }
    search: { // args
      name?: string | null; // String
      page: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}